// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createAt  DateTime @default(now()) @map("create_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name     String @default("")
  surname  String @default("")
  email    String @unique
  password String @unique

 

  roleId Int?   @map("rile_id")
  role   Role? @relation(fields: [roleId], references: [id])

  gardenId  Int?  @map("garden_Id")
  garden  Garden?  @relation(fields: [gardenId], references: [id])


}


model Garden{
  id    Int @id @default(autoincrement())
  user User[]

  groupId  Int   @map("group_Id")
  group    Group  @relation(fields: [groupId], references: [id]) 

}

model Group {
  id  Int  @id @default(autoincrement())
  format10x15  String?
  formatA4     String?
  magnet       String?  
  calendar     String?

  garden Garden[]

  imageId  Int  @unique @map("image_Id")
  image    Image @relation(fields: [imageId], references: [id])  
}


model Image {
  id Int @id @default(autoincrement())

  group Group[] 
 
}

model Permission {
  id       Int       @id @default(autoincrement())
  resource Resource
  actions  Actions[]

  role Role[]
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String
  permissions Permission[]

  user User[]
}



enum Resource {
  boss
  admin
  user
  profile
  settings
  gallery
}

enum Actions {
  read
  create
  update
  delete
}
//  @@index([userId]) // Индекс для быстрого поиска